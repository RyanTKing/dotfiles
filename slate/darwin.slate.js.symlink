/*
config defaultToCurrentScreen true
config nudgePercentOf screenSize
config resizePercentOf screenSize

# Push with Vim keys or arrow keys
bind h:ctrl;cmd      push left   bar-resize:screenSizeX/3
bind l:ctrl;cmd      push right  bar-resize:screenSizeX/3
bind k:ctrl;cmd      push up     bar-resize:screenSizeY/2
bind j:ctrl;cmd      push down   bar-resize:screenSizeY/2
bind left:ctrl;cmd   push left   bar-resize:screenSizeX/3
bind right:ctrl;cmd  push right  bar-resize:screenSizeX/3
bind up:ctrl;cmd     push up     bar-resize:screenSizeY/2
bind down:ctrl;cmd   push down   bar-resize:screenSizeY/2

bind h:ctrl;alt      push left   bar-resize:screenSizeX/2
bind l:ctrl;alt      push right  bar-resize:screenSizeX/2
bind left:ctrl;alt   push left   bar-resize:screenSizeX/2
bind right:ctrl;alt  push right  bar-resize:screenSizeX/2

bind k:ctrl;cmd;shift     move windowTopLeftX;0 windowSizeX;screenSizeY/2
bind j:ctrl;cmd;shift     move windowTopLeftX;screenSizeY/2+25 windowSizeX;screenSizeY/2
bind h:ctrl;cmd;shift     nudge -windowSizeX +0
bind l:ctrl;cmd;shift     nudge +windowSizeX +0
bind up:ctrl;cmd;shift    move windowTopLeftX;0 windowSizeX;screenSizeY/2
bind down:ctrl;cmd;shift  move windowTopLeftX;screenSizeY/2+25 windowSizeX;screenSizeY/2
bind left:ctrl;cmd;shift  nudge -windowSizeX +0
bind right:ctrl;cmd;shift nudge +windowSizeX +0

bind 1:ctrl;cmd;shift move 0;0 screenSizeX/4;screenSizeY/2
bind right:
bind 

# Move
bind 1:ctrl;cmd      move 0;0 screenSizeX;screenSizeY

# Window Hints
bind esc:cmd hint
 */

// Store Window States
var windowStates = {};

// Left Side Operations
var leftBarHalf = S.op("push",
                       {"direction": "left",
                        "style": "bar-resize:screenSizeX/2"});
var leftBarThird = S.op("push",
                        {"direction": "left",
                         "style": "bar-resize:screenSizeX/3"});
var leftBarTwoThirds = S.op("push",
                            {"direction": "left",
                             "style": "bar-resize:screenSizeX/3*2"});

// Right Side Operations
var rightBarThird = S.op("push",
                         {"direction": "right",
                          "style": "bar-resize:screenSizeX/3"});
var rightBarHalf = S.op("push",
                        {"direction": "right",
                         "style": "bar-resize:screenSizeX/2"});
var rightBarTwoThirds = S.op("push",
                             {"direction": "right",
                              "style": "bar-resize:screenSizeX/3*2"});

/* Return a function that will cycle through available states,
 * under the assumption that each state provided is valid.
 */
function getCycleStates(states) {
    return function(win) {
        if (win.pid in windowStates &&
            windowStates[win.pid] !== undefined &&
            states.indexOf(windowStates[win.pid]) !== -1) {
            var nextIndex = (states.indexOf(windowStates[win.pid]) + 1) % 3;
            var nextState = states[nextIndex];
            windowStates[win.pid] = nextState;
        } else {
            windowStates[win.pid] = states[0];
        }

        win.doOperation(windowStates[win.pid]);
    };
}

// Window Cycle Functions
var leftCycleOp = getCycleStates([leftBarHalf,
                                  leftBarThird,
                                  leftBarTwoThirds]);
var rightCycleOp = getCycleStates([rightBarHalf,
                                   rightBarThird,
                                   rightBarTwoThirds]);

// Bind Window Cycle Functions
S.bind('h:cmd,shift', leftCycleOp);
S.bind('l:cmd,shift', rightCycleOp);

// Full Screen
S.bind(
    'f:cmd,shift',
    S.op(
        'move',
        {
            'x': 'screenOriginX',
            'y': 'screenOriginY',
            'width': 'screenSizeX',
            'height': 'screenSizeY'
        }
    )
);
